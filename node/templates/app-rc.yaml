apiVersion: v1
kind: ReplicationController
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    app: {{ template "fullname" . }}
  template:
    metadata:
      name: {{ template "fullname" . }}
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.imageName }}:{{ .Values.imageTag }}"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "{{ .Values.cpu }}"
            memory: "{{ .Values.memory }}"
          limits:
            cpu: "{{ .Values.cpu }}"
            memory: "{{ .Values.memory }}"
        env:
          - name: PORT
            value: "{{ .Values.port }}"
        {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ .value }}
        {{- end }}
        ports:
        - name: node
          containerPort: 3000
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 1
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 1
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ .name }}
      {{- end }}
      {{- end -}}
